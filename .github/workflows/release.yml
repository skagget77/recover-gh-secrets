name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  linux-amd64:
    name: Linux/AMD64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup build environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build
        run: CGO_ENABLED=0 GOOS="linux" GOARCH="amd64" go build -ldflags "-s -w"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: '.'
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  linux-arm:
    name: Linux/ARM32v7
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup build environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build
        run: CGO_ENABLED=0 GOOS="linux" GOARCH="arm" go build -ldflags "-s -w"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            suffix=-arm32v7,onlatest=true
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.arm
          platforms: linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  linux-arm64:
    name: Linux/ARM64v8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup build environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build
        run: CGO_ENABLED=0 GOOS="linux" GOARCH="arm64" go build -ldflags "-s -w"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            suffix=-arm64v8,onlatest=true
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.arm64
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
