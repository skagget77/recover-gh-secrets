HOME     = .
RANDFILE = $ENV::HOME/.rnd

[ ca ]
default_ca = CA_default

[ CA_default ]
base_dir         = .
certificate      = $base_dir/ca.pem
private_key      = $base_dir/ca-key.pem
new_certs_dir    = $base_dir
database         = $base_dir/index.txt
serial           = $base_dir/serial.txt
default_days     = 1825
default_crl_days = 30
default_md       = sha256
preserve         = no
unique_subject   = yes
email_in_dn      = no
copy_extensions  = copy
x509_extensions  = ca_extensions

[ req ]
default_bits       = 4096
default_keyfile    = ca-key.pem
string_mask        = utf8only
distinguished_name = ca_distinguished_name
x509_extensions    = ca_extensions

[ ca_distinguished_name ]
countryName                    = Country Name (2 letter code)
countryName_default            = SE
stateOrProvinceName            = State or Province Name (full name)
stateOrProvinceName_default    = Sodermanland
localityName                   = Locality Name (eg, city)
localityName_default           = Stockholm
organizationName               = Organization Name (eg, company)
organizationName_default       = Independent
organizationalUnitName         = Organizational Unit (eg, division)
organizationalUnitName_default = .
commonName                     = Common Name (e.g. server FQDN or YOUR name)
commonName_default             = Recover GH Secrets CA
emailAddress                   = Email Address
emailAddress_default           = skagget77@gmail.com

[ ca_extensions ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always, issuer
basicConstraints       = critical, CA:true
keyUsage               = keyCertSign, cRLSign

[ signing_policy ]
countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional

[ signing_req ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
basicConstraints       = CA:FALSE
keyUsage               = digitalSignature, keyEncipherment
